generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["driverAdapters"]
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

enum Role {
    ADMIN
    SUPER_ADMIN
}

enum SemesterGrade {
    FIRST
    SECOND
    THIRD
    FOURTH
    FIFTH
    SIXTH
}

model User {
    id        String   @id @default(cuid())
    email     String   @unique
    password  String
    profileId String?  @unique
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    profile   Profile? @relation(fields: [profileId], references: [id])
}

model Profile {
    id    String  @id @default(cuid())
    name  String
    image String?
    role  Role
    user  User?   @relation
}

model Student {
    id         String             @id @default(cuid())
    email      String             @unique
    nim        String             @unique
    password   String
    name       String
    image      String?
    semesterId String
    createdAt  DateTime           @default(now())
    updatedAt  DateTime           @updatedAt
    courses    CourseEnrollment[]
    semester   Semester           @relation(fields: [semesterId], references: [id])
}

model Lecturer {
    id    String @id @default(cuid())
    name  String
    email String @unique

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    courses   Course[]
    semesters Semester[]
}

model Course {
    id         String @id @default(cuid())
    name       String
    semesterId String
    credit     Int

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    semester  Semester           @relation(fields: [semesterId], references: [id])
    lecturers Lecturer[]
    students  CourseEnrollment[]
}

model Semester {
    id    String        @id @default(cuid())
    grade SemesterGrade @unique

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    courses   Course[]
    lecturers Lecturer[]
    students  Student[]
}

model CourseEnrollment {
    student   Student @relation(fields: [studentId], references: [id])
    studentId String
    course    Course  @relation(fields: [courseId], references: [id])
    courseId  String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@id([studentId, courseId])
}
